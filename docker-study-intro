1. why docker what can it do ? 
- conrainerize application - completely issolated env like a new vm.
- Run each services with its own dependencies in seperate containers.

2. What are containers? 
completely issolated env like a new vm. 

3. what is operating system ? 
os (ubuntu) comes with os kernal ( interactive with underlying software)

4. container vs virtual machines: 
light weight its size is in mb's.
we can scale them as required. 

5. What is docker image:
- image is a package / template / plan
- we can run multiple container using one image.

6. Docker in devops:
- docker file creates image for application in such a way that it runs in same way everywhere. 

7. docker editions: 
- community edition -> available on linux,mac,windows,cloud like aws.
- enterprise edition 

8. Basic docker commands: 

Run - start a container.
ps - list containers.
ps -a - list the exited container.
stop containername - stops the container.
docker images - list the available images.
rmi - remove docker images -> make sure container is stopped. 
pull - download the image from dockerhub / only pull and doesnt run.
docker run ubuntu sleep 5 ->
-> container is not used to host os, it is used to execute the application like webservices. when application is failed container fails. 
docker exec containername cat /etc/hosts -> simply cats the content.
Run - attach and detech -> -d for detached mode to run application in background. 
docker attach cont_id -> to run in attached mode. 

Demo: 

docker tags:

used to download the perticilar version on image. redid 2.2.5
default tag is latest.

docker ports:
docker run -p 5000:80 application


docker volume - data presistent in docker.

for example mysql data in docker container . if container is stoped and removed then we will lose all the datas as well. 
in docker container mysql data is stored in /var/lib/mysql

so , docker run -v /opt/data:/var/lib/mysql mysql.

mount the external directoy to the folder inside docker container. 

docker Inspect container: to knoe the details of the container.. 

docker inspect container_name
docker logs container_name







